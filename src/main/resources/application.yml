spring:
  application:
    name: chatwoot-backend
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/chatwoot}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
          
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    
  security:
    user:
      name: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin123}

# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-here-make-it-long-and-secure}
    expiration: ${JWT_EXPIRATION:3600000} # 1 hour in milliseconds
    
# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /
    
# Logging Configuration
logging:
  level:
    com.weavecode.chatwoot: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    path: logs
    name: chatwoot
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  logback:
    config: classpath:logback-spring.xml
    
# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active:default}
  health:
    redis:
      enabled: true
    db:
      enabled: true
      
# Redis Cache Configuration
spring:
  cache:
    type: redis
    redis:
      time-to-live: 600000 # 10 minutes
      cache-null-values: false
      
# OpenAI Configuration
openai:
  api-key: ${OPENAI_API_KEY:}
  model: ${OPENAI_MODEL:gpt-4}
  max-tokens: ${OPENAI_MAX_TOKENS:1000}
  
# Stripe Configuration
stripe:
  api-key: ${STRIPE_API_KEY:}
  webhook-secret: ${STRIPE_WEBHOOK_SECRET:}
  
# PayPal Configuration
paypal:
  client-id: ${PAYPAL_CLIENT_ID:}
  client-secret: ${PAYPAL_CLIENT_SECRET:}
  mode: ${PAYPAL_MODE:sandbox}
  
# SendGrid Configuration
sendgrid:
  api-key: ${SENDGRID_API_KEY:}
  from-email: ${SENDGRID_FROM_EMAIL:noreply@weavecode.co.uk}
  
# Multi-tenancy Configuration
multi-tenancy:
  default-plan: FREE
  max-tenants-per-instance: 1000
  tenant-isolation: SCHEMA
  
# Security Configuration
security:
  cors:
    allowed-origins: "*"
    allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
